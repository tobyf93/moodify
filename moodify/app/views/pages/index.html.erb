<div id="app"></div>

<script type="text/babel">
  var App = React.createClass({
    render: function() {
      return (
        <div>
          <Header />
          <List data={this.props.data} />
        </div>
      );
    }
  });

  var Header = React.createClass({
    onClick: function() {
      if (gon.playlists.length === 0) {
        window.location.href = '/auth/spotify';
      } else {
        this.analyzePlaylists();
      }
    },

    analyzePlaylists: function() {
      $.ajax(
         {
           type: "POST",
           url: '/analyze',
           beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
           data: JSON.stringify(gon),
           dataType: "json",
           contentType: 'application/json'
         }
       );
    },

    render: function() {
      var label = 'Login';

      if (gon.playlists.length > 0) {
        label = 'Analyze Music Now';
      }

      return (
        <div id="header">
          <%= image_tag 'spotify.png', width: '150' %>
          <h1>Moodify</h1>
          <div id="button"
                onClick={this.onClick}>
                {label}
          </div>
        </div>
      )
    }
  });

  var List = React.createClass({
    getInitialState: function() {
      gon.playlists.forEach(function(playlist) {
        playlist.selected = true;
      });

      return {
        data: gon.playlists
      }
    },

    handleClick: function(index) {
      var data = this.state.data;

      if (data[index].selected === true) {
        data[index].selected = false;
      } else {
        data[index].selected = true;
      }

      this.setState({data: data});
    },

    render: function() {
      var items = [];
      for (var i = 0; i < this.state.data.length; i++) {
        var boundClick = this.handleClick.bind(this, i);
        items.push(<ListItem
                    key={i}
                    data={this.state.data[i]}
                    onClick={boundClick}/>);
      }

      return (
        <ul className="list-group">
          {items}
        </ul>
      )
    }
  });

  var ListItem = React.createClass({
    render: function() {
      var word = this.props.data.total === 1 ? 'track' : 'tracks';
      var icon = 'glyphicon';

      if (this.props.data.selected === true) {
        icon += ' glyphicon-ok-circle';
      } else {
        icon += ' glyphicon-remove-circle';
      }

      return (
        <li className="list-group-item"
          key={this.props.key}
          onClick={this.props.onClick}>
          <div className={icon} aria-hidden="true"></div>
          <div className="title">
            {this.props.data.name}<br />
            {this.props.data.total} {word}
          </div>
        </li>
      )
    }
  })

  ReactDOM.render(
    <App />,
    document.getElementById('app')
  );
</script>
